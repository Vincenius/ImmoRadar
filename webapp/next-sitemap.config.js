const { MongoClient } = require('mongodb');

const exclude = ['/deleted', '/profile']

const berlinZipCodes = [
    "10115",
    "10117",
    "10119",
    "10178",
    "10179",
    "10315",
    "10317",
    "10318",
    "10319",
    "10365",
    "10367",
    "10369",
    "10405",
    "10407",
    "10409",
    "10435",
    "10437",
    "10439",
    "10551",
    "10553",
    "10555",
    "10557",
    "10559",
    "10585",
    "10587",
    "10589",
    "10623",
    "10625",
    "10627",
    "10629",
    "10707",
    "10709",
    "10711",
    "10713",
    "10715",
    "10717",
    "10719",
    "10777",
    "10779",
    "10781",
    "10783",
    "10785",
    "10787",
    "10789",
    "10823",
    "10825",
    "10827",
    "10829",
    "12043",
    "12045",
    "12047",
    "12049",
    "12051",
    "12053",
    "12055",
    "12057",
    "12059",
    "12099",
    "12101",
    "12103",
    "12105",
    "12107",
    "12109",
    "12157",
    "12159",
    "12161",
    "12163",
    "12165",
    "12167",
    "12169",
    "12203",
    "12205",
    "12207",
    "12209",
    "12247",
    "12249",
    "12277",
    "12279",
    "12305",
    "12307",
    "12309",
    "12347",
    "12349",
    "12351",
    "12353",
    "12355",
    "12357",
    "12359",
    "12435",
    "12437",
    "12439",
    "12459",
    "12487",
    "12489",
    "12524",
    "12526",
    "12527",
    "12555",
    "12557",
    "12559",
    "12587",
    "12589",
    "12619",
    "12621",
    "12623",
    "12627",
    "12629",
    "12679",
    "12681",
    "12683",
    "12685",
    "12687",
    "12689",
    "13051",
    "13053",
    "13055",
    "13057",
    "13059",
    "13086",
    "13088",
    "13089",
    "13125",
    "13127",
    "13129",
    "13156",
    "13158",
    "13159",
    "13187",
    "13189",
    "13347",
    "13349",
    "13351",
    "13353",
    "13355",
    "13357",
    "13359",
    "13403",
    "13405",
    "13407",
    "13409",
    "13435",
    "13437",
    "13439",
    "13465",
    "13467",
    "13469",
    "13503",
    "13505",
    "13507",
    "13509",
    "13581",
    "13583",
    "13585",
    "13587",
    "13589",
    "13591",
    "13593",
    "13595",
    "13597",
    "13599",
    "13627",
    "13629",
    "14050",
    "14052",
    "14053",
    "14055",
    "14057",
    "14059",
    "14089",
    "14109",
    "14129",
    "14163",
    "14165",
    "14167",
    "14169",
    "14193",
    "14195",
    "14197",
    "14199"
]

module.exports = {
    siteUrl: 'https://immoradar.xyz',
    generateRobotsTxt: true,
    exclude: exclude,
    robotsTxtOptions: {
        policies: [
            {
                userAgent: '*',
                disallow: exclude,
            },
        ],
    },
    // generateIndexSitemap: false,
    additionalPaths: async (config) => {
        const client = new MongoClient(process.env.MONGODB_URI);

        const db = client.db(process.env.MONGODB_DB);
        const collection = db.collection('locations');

        let result = []

        result = await collection.aggregate([
            {
                $match: {
                    zipCodes: { $in: berlinZipCodes } // temporary
                }
            },
            {
                $project: {
                    name: 1,
                    zipCodeCount: { $size: "$zipCodes" }
                }
            },
            {
                $sort: { zipCodeCount: -1 }
            },
            {
                $project: {
                    name: 1,
                    _id: 0
                }
            }
        ]).toArray()

        const searchSitemap = await Promise.all(result.map(async item => {
            const res = await config.transform(config, `/search?q=${item.name}`)

            return res
        }))

        return searchSitemap
    }
}